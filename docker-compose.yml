services:
  mongodb:
    image: mongo:5.0
    container_name: emergency-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - emergency-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: emergency-backend
    restart: always
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - MONGODB_URI=mongodb://mongodb:27017/emergency_db
      - JWT_SECRET=your_secure_jwt_secret_here_change_this_in_production
      - NODE_ENV=development
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - emergency-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: emergency-frontend
    restart: always
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_BASE_URL=/api
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - emergency-network

networks:
  emergency-network:
    driver: bridge

volumes:
  mongo_data: